openapi: 3.0.0
info:
  title: Sample API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.9
servers:
  - url: http://api.example.com/v1
    description: Optional server description, e.g. Main (production) server
  - url: http://staging-api.example.com
    description: Optional server description, e.g. Internal staging server for testing
paths:
  /users:
    get:
      summary: Returns a list of users
      description: Optional extended description in CommonMark or HTML.
      x-codeSamples:
        - lang: bash
          label: List all users
          source: |
            curl -X GET https://api.example.com/v1/users

        - lang: javascript
          label: List all users
          source: |
            const api = require('api-client');
            api.users.list();
      parameters:
        - name: limit
          in: query
          description: Maximum number of items to return
          required: true
          schema:
            type: integer
            default: 20
        - name: offset
          in: query
          description: Number of items to skip
          required: false
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: A JSON array of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
              examples:
                json:
                  summary: A sample JSON response
                  value: {
                    id: 1,
                    username: 'John Doe',
                  }
components:
  schemas:
    User:
      type: object
      required:
        - id
        - username
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
          format: email
        status:
          type: string
          enum: [ active, inactive ]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
